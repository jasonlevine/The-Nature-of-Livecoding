;; Ported to Extempore by Jason Levine
;; setup window dims

(bind-val width float 800.)
(bind-val height float 200.)

(sys:load "The-Nature-of-Livecoding/processing.xtm")

;; make mover closure
(bind-func make-mover
	(lambda ()
		(let ((location:vec (zalloc 2))
					(velocity:vec (zalloc 2))
					(acceleration:vec (zalloc 2))
					(top_speed:float 6.))

					(vec2_set location (rand_max (* width 0.5)) (rand_max (* height 0.5)))
					(vec2_set velocity 0. 0.)
					
		(lambda ()
			;;update position and velocity
			(vec2_set acceleration (rand_range -1. 1.) (rand_range -1. 1.))
			(vec2_inc velocity acceleration)
			(vec2_limit velocity top_speed)
			(vec2_inc location velocity)

			;;check bounds. wrap around
			(if (> (vec2_get_x location) width) 
				(vec2_set_x location 0.))

			(if (< (vec2_get_x location) 0.) 
				(vec2_set_x location width))

			(if (> (vec2_get_y location) height) 
				(vec2_set_y location 0.))

			(if (< (vec2_get_y location) 0.) 
				(vec2_set_y location height))

			;;display mover
			(stroke 0.0 0.0 0.0 1.0)
			(stroke_width 2.0)
			(fill 0.5 0.5 0.5 1.0)
			(circle (vec2_get_x location) (vec2_get_y location) 48.0)))))


;; setup variables
(bind-func mover (make-mover))


;; draw loop
(bind-func draw
    (lambda ()
    	(background 1.0 1.0 1.0)
    	(mover)
    	))